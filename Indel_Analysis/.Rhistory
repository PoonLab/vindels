}
pvalues <- c(pvalues, toAdd)
}
}
# for (x in 1:length(pvalues)){
#   if (pvalues[x] > 1.0){
#     pvalues[x] <- pvalues[x] -1
#
#     pvalues[x] <- pvalues[x]/10
#
#     pvalues[x] <- pvalues[x] + 1
#   }
# }
colors <- brewer.pal(5, 'Set1')
nt <- "G"
nt <- "T"
nt <- "C"
nt <- "A"
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
list.df <- list()
for (nt in ntides){
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
df <- data.frame(outside=outside$prop, inside=inside$prop, nt=inside$nt, vregion=inside$vregion)
list.df[[nt]] <- df
}
data.df
data.df[.1]
data.df[,1]
data.df[1,1]
rownames(data.df[1,1])
colnames(data.df[1,1])
sizes <- c()
pvalues <- c()
for (n in 1:nrow(data.df)){
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
}
# for (x in 1:length(pvalues)){
#   if (pvalues[x] > 1.0){
#     pvalues[x] <- pvalues[x] -1
#
#     pvalues[x] <- pvalues[x]/10
#
#     pvalues[x] <- pvalues[x] + 1
#   }
# }
colors <- brewer.pal(5, 'Set1')
nt <- "G"
nt <- "T"
nt <- "C"
nt <- "A"
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
list.df <- list()
for (nt in ntides){
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
df <- data.frame(outside=outside$prop, inside=inside$prop, nt=inside$nt, vregion=inside$vregion)
list.df[[nt]] <- df
}
#Two csv files containing the numbers of indel and non-indel nucleotides in all 35 variable loops
noindel <- read.csv("~/PycharmProjects/hiv-evolution-master/noindel.csv")
indel <- read.csv("~/PycharmProjects/hiv-evolution-master/indel.csv",stringsAsFactors = F)
require(MASS)
require(RColorBrewer)
#data frame to hold the chi square statistical test values
data.df <- data.frame(filename=indel$filename,stringsAsFactors = F)
#data frame to hold nucleotide counts + proportions for all subtypes + vloops
big.df <- data.frame()
toTest <- data.frame()
for (i in 1:nrow(indel)){
subtype <- toString(indel[i,1])
for (x in 1:5){
in.df <- indel[i,c(1+x, 6+x, 11+x, 16+x)]
out.df <- noindel[i, c(1+x, 6+x, 11+x, 16+x)]
#prep for chisq test
toTest <- rbind(in.df,out.df)
toTest <- matrix(unlist(toTest), nrow=2,ncol=4)
#build the big.df
combined <- rbind(in.df,in.df,in.df,in.df,out.df,out.df,out.df,out.df)
names(combined) <- c('A', 'C', 'G', 'T')
combined$total <- rowSums(combined)
combined$nt <- rep(c('A','C','G','T'), 2)
combined$subtype <- c(rep(subtype,8))
combined$vregion <- c(rep(x,8))
combined$indel <- c(rep("inside",4), rep("outside",4))
big.df <- rbind(big.df, combined)
if (x == 3 && subtype == "F1"){
next
}
#df$indel <- c('indel', 'no_indel')
rownames(toTest) <- c('inside', 'outside')
colnames(toTest) <- c('A', 'C', 'G', 'T')
chi <- chisq.test(toTest)
data.df[i, paste0('V',x)] <- chi$p.value
}
}
ntides <- strsplit('ACGT',"")[[1]]
for (n in ntides){
big.df[which(big.df$nt == n),'freq'] <- big.df[which(big.df$nt == n) , n]
big.df[which(big.df$nt == n),'prop'] = big.df[which(big.df$nt == n), 'freq'] / big.df[which(big.df$nt == n), 'total']
}
pvaues
pvalues
sizes
which(sizes==1.1)
toAdd
data.df
#SCALE SIZES -----------------------------------------
sizes <- c()
sizes.df <- data.frame()
pvalues <- c()
for (n in 1:nrow(data.df)){
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
sizes.df <- rbind(sizes.df, sizes)
}
# for (x in 1:length(pvalues)){
#   if (pvalues[x] > 1.0){
#     pvalues[x] <- pvalues[x] -1
#
#     pvalues[x] <- pvalues[x]/10
#
#     pvalues[x] <- pvalues[x] + 1
#   }
# }
colors <- brewer.pal(5, 'Set1')
nt <- "G"
nt <- "T"
nt <- "C"
nt <- "A"
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
list.df <- list()
for (nt in ntides){
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
df <- data.frame(outside=outside$prop, inside=inside$prop, nt=inside$nt, vregion=inside$vregion)
list.df[[nt]] <- df
}
sizes.df
sizes <- c()
sizes.df <- data.frame()
pvalues <- c()
for (n in 1:nrow(data.df)){
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
print(sizes)
sizes.df <- rbind(sizes.df, sizes)
}
#SCALE SIZES -----------------------------------------
sizes.df <- data.frame()
pvalues <- c()
for (n in 1:nrow(data.df)){
sizes <- c()
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
print(sizes)
sizes.df <- rbind(sizes.df, sizes)
}
sizes.df
pvalues
0.05/35
#SCALE SIZES -----------------------------------------
sizes.df <- data.frame()
pvalues.df <- data.frame()
for (n in 1:nrow(data.df)){
sizes <- c()
pvalues <- c()
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
print(sizes)
sizes.df <- rbind(sizes.df, sizes)
pvalues.df <- rbind(pvalues.df, pvalues)
}
pvalues.df
which(pvalues.df < (0.05/35))
pvalues.df < (0.05/35)
0.05/35
colors <- brewer.pal(5, 'Set1')
nt <- "G"
nt <- "T"
nt <- "C"
nt <- "A"
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
list.df <- list()
for (nt in ntides){
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
df <- data.frame(outside=outside$prop, inside=inside$prop, nt=inside$nt, vregion=inside$vregion)
list.df[[nt]] <- df
}
ex=2
par(pty="s", mfrow=c(2,2), xpd=NA, mar=c(3,8,4,1),las=0)
lim = c(0.24,0.46)
plot(list.df[[1]][,1:2], cex=sizes, pch=(list.df[[1]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.3, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
text(0.187,0.475,labels="a)", cex=1.5)
text(0.245,0.452,labels="A", cex=1.5)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=F)
abline(0,1)
#C
lim=c(0.05,0.30)
par(mar=c(3,1,4,8))
plot(list.df[[2]][,1:2], cex=sizes, pch=(list.df[[2]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.2, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(-0.010,0.317,labels="b)", cex=1.5)
text(0.056,0.29,labels="C", cex=1.5)
par(xpd=F)
#G
lim=c(0.12,0.40)
par(mar=c(4,8,3,1))
plot(list.df[[3]][,1:2], cex=sizes, pch=(list.df[[3]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(0.053,0.42,labels="c)", cex=1.5)
text(0.127,0.387,labels="G", cex=1.5)
par(xpd=F)
legend(0.34,0.25,legend=c('V1  ','V2  ','V3  ','V4  ','V5  '), pch=c(21,22,23,24,25),cex=1.2, pt.bg=colors,x.intersp = 1.8,y.intersp=1.6, pt.cex=2.2)
#T
lim=c(0.11,0.33)
par(mar=c(4,1,3,8))
plot(list.df[[4]][,1:2], cex=sizes, pch=(list.df[[4]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.2, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(0.058,0.345,labels="d)", cex=1.5)
text(0.115,0.32,labels="T", cex=1.5)
par(xpd=F)
cex=2
par(pty="s", mfrow=c(2,2), xpd=NA, mar=c(3,8,4,1),las=0)
lim = c(0.24,0.46)
plot(list.df[[1]][,1:2], cex=sizes, pch=(list.df[[1]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.3, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
text(0.187,0.475,labels="a)", cex=1.5)
text(0.245,0.452,labels="A", cex=1.5)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=F)
abline(0,1)
#C
lim=c(0.05,0.30)
par(mar=c(3,1,4,8))
plot(list.df[[2]][,1:2], cex=sizes, pch=(list.df[[2]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.2, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(-0.010,0.317,labels="b)", cex=1.5)
text(0.056,0.29,labels="C", cex=1.5)
par(xpd=F)
#G
lim=c(0.12,0.40)
par(mar=c(4,8,3,1))
plot(list.df[[3]][,1:2], cex=sizes, pch=(list.df[[3]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(0.053,0.42,labels="c)", cex=1.5)
text(0.127,0.387,labels="G", cex=1.5)
par(xpd=F)
legend(0.34,0.25,legend=c('V1  ','V2  ','V3  ','V4  ','V5  '), pch=c(21,22,23,24,25),cex=1.2, pt.bg=colors,x.intersp = 1.8,y.intersp=1.6, pt.cex=2.2)
#T
lim=c(0.11,0.33)
par(mar=c(4,1,3,8))
plot(list.df[[4]][,1:2], cex=sizes, pch=(list.df[[4]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.2, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(0.058,0.345,labels="d)", cex=1.5)
text(0.115,0.32,labels="T", cex=1.5)
par(xpd=F)
sizes
sizes.df
as.double(sizes.df)
#SCALE SIZES -----------------------------------------
sizes.df <- data.frame()
sizes.v <- c()
pvalues.df <- data.frame()
for (n in 1:nrow(data.df)){
sizes <- c()
pvalues <- c()
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
print(sizes)
sizes.df <- rbind(sizes.df, sizes)
pvalues.df <- rbind(pvalues.df, pvalues)
sizes.v <- c(sizes.v,sizes)
}
#SCALE SIZES -----------------------------------------
sizes.df <- data.frame()
sizes.v <- c()
pvalues.df <- data.frame()
for (n in 1:nrow(data.df)){
sizes <- c()
pvalues <- c()
for (i in 1:5){
toAdd <- data.df[n,(i+1)]
if (is.na(toAdd) || is.nan(toAdd) || toAdd >= (0.05/35)){
#toAdd <- 1
sizes <- c(sizes, 1.1)
}else{
#toAdd <- -log(toAdd, base=10)
sizes <- c(sizes, 2.2)
}
pvalues <- c(pvalues, toAdd)
}
print(sizes)
sizes.df <- rbind(sizes.df, sizes)
pvalues.df <- rbind(pvalues.df, pvalues)
sizes.v <- c(sizes.v,sizes)
}
# for (x in 1:length(pvalue
colors <- brewer.pal(5, 'Set1')
nt <- "G"
nt <- "T"
nt <- "C"
nt <- "A"
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
list.df <- list()
for (nt in ntides){
inside <- data.frame(big.df[which(big.df$indel == 'inside' & big.df$nt==nt),])
outside <- data.frame(big.df[which(big.df$indel == 'outside' & big.df$nt==nt) ,])
df <- data.frame(outside=outside$prop, inside=inside$prop, nt=inside$nt, vregion=inside$vregion)
list.df[[nt]] <- df
}
cex=2
par(pty="s", mfrow=c(2,2), xpd=NA, mar=c(3,8,4,1),las=0)
lim = c(0.24,0.46)
plot(list.df[[1]][,1:2], cex=sizes.v, pch=(list.df[[1]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.3, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
text(0.187,0.475,labels="a)", cex=1.5)
text(0.245,0.452,labels="A", cex=1.5)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=F)
abline(0,1)
#C
lim=c(0.05,0.30)
par(mar=c(3,1,4,8))
plot(list.df[[2]][,1:2], cex=sizes.v, pch=(list.df[[2]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.2, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(-0.010,0.317,labels="b)", cex=1.5)
text(0.056,0.29,labels="C", cex=1.5)
par(xpd=F)
#G
lim=c(0.12,0.40)
par(mar=c(4,8,3,1))
plot(list.df[[3]][,1:2], cex=sizes.v, pch=(list.df[[3]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(0.053,0.42,labels="c)", cex=1.5)
text(0.127,0.387,labels="G", cex=1.5)
par(xpd=F)
legend(0.34,0.25,legend=c('V1  ','V2  ','V3  ','V4  ','V5  '), pch=c(21,22,23,24,25),cex=1.2, pt.bg=colors,x.intersp = 1.8,y.intersp=1.6, pt.cex=2.2)
#T
lim=c(0.11,0.33)
par(mar=c(4,1,3,8))
plot(list.df[[4]][,1:2], cex=sizes.v, pch=(list.df[[4]]$vregion+20), bg=rep(colors, 7),xlim=lim,ylim=lim,
cex.lab=1.2, cex.axis=0.9,cex.main=1.5, ylab='', xlab='')
abline(0,1)
title(ylab="Proportion Within Indels", line=2.2,cex.lab=1)
title(xlab="Proportion Outside Indels", line=2.2,cex.lab=1)
par(xpd=NA)
text(0.058,0.345,labels="d)", cex=1.5)
text(0.115,0.32,labels="T", cex=1.5)
par(xpd=F)
pvalues.df < (0.05/35)
indel
toTest
?pll
??pll
setwd("~/vindels/Indel_Analysis/")
require(bbmle)
require(MASS)
??pll
setwd("~/vindels/Indel_Analysis/")
require(bbmle)
require(MASS)
obj.f <- function(rate) -pll(rate, outcomes, times)  # objective function
pll <- function(rate, outcomes, times) {
# @param rate:  instantaneous rate of indels
# @param outcomes:  vector of boolean values, TRUE if *no* indel on cherry
# @param times:  vector of branch lengths associated with cherries
# @return: log-likelihood of model
pr <- exp(-rate * times)  # probabilities of no indels for each cherry
sum( outcomes * log(pr), (1-outcomes) * log(1-pr) )
}
csvfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/9_2_indels",full.names=TRUE)
max.llh <- data.frame(stringsAsFactors = FALSE)
max.llh2 <- data.frame(subtype=character(),stringsAsFactors = FALSE)
con.int <- data.frame(stringsAsFactors = FALSE)
big.df <- data.frame(stringsAsFactors = FALSE)
rates <- c()
for (i in 1:length(csvfolder)){
csv <- read.csv(csvfolder[i])
filename <- strsplit(strsplit(csvfolder[i], "/")[[1]][7], "\\+.")[[1]][1]
max.llh2 [i,1] <- filename
print(filename)
times.df <- c()
outcomes.df <- data.frame()
for (z in 1:5){
times <- csv$total.length[which(!is.na(csv[paste0("VR",z,".indel")]))]
times.df <- c(times.df, times)
outcomes <- csv[which(!is.na(csv[paste0("VR",z,".indel")])),paste0("VR",z,".indel")]
outcomes.df <- rbind(outcomes.df, data.frame(out=outcomes, vregion=z))
obj.f <- function(rate) -pll(rate, outcomes, times)  # objective function
mle.result <- bbmle::mle2(obj.f, start=list(rate=1), method = "Brent", lower=1e-12, upper = 1)
max.llh <- rbind(max.llh, data.frame(subtype=filename, vloop=z, rate=coef(mle.result)[[1]]))
max.llh2 [i,z+1] <- coef(mle.result)[[1]]
rates <- c(rates,coef(mle.result)[[1]]) # this is the rate
#res$value #this is the likelihood
if(!all(outcomes)){
int <- confint(mle.result, level = 0.95)
con.int <- rbind(con.int,data.frame(subtype=filename,vloop=z,lower=int[[1]],upper=int[[2]]))
}else{
con.int <- rbind(con.int,data.frame(subtype=filename,vloop=z,lower=0,upper=0))
}
}
big.df <- rbind(big.df, data.frame(subtype=rep(filename, length(times.df)), Time=times.df, outcomes=outcomes.df$out, Vregion=as.factor(outcomes.df$vregion)))
}
?pll
??pll
outcomes
outcomes.df
csv
times
times.df
1 - FALSE
1 - TRUE\
1 - TRUE
