sample.times <- sample.times - 1970
rtdtree <- handle.error(tre, sample.times, 5)
if (is.null(rtdtree)){
next
}
write.tree(rtdtree, file="rtt2lsd.nwk")
#The following is written in accordance with the LSD format
write(nrow(temp), file='date_file.txt')
for (i in 1:nrow(temp)) {
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste0("b(", temp$min.ord[i], ",", temp$max.ord[i], ")")),
file='date_file.txt', append=TRUE)
}
}
#print(i)
#paths <- nodepath(rtdtree)
#distances <- c()
#for (n in 1:length(paths))  distances <- c(distances, sum(rtdtree$edge.length[paths[[n]]]))
#system(paste0('lsd -i rtt2lsd.nwk -d date_file.txt -o ', filename,' -c'))
}
file.remove('date_file.txt')
file.remove('rtt2lsd.nwk')
require(RColorBrewer)
cols <- brewer.pal(7, 'Dark2')
subtypes = c()
big.df <- data.frame()
#PHYLOGENETIC SCATTER PLOT -  Figure 1
for (n in 1:7){
csv <- read.csv(dfolder[n],header=F,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
tre <- read.tree(tfolder[n])
tre <- multi2di(tre)
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
csv$rtt <- apply(sapply(csv$date, get.range),2,mean)
csv$edit <- sapply(csv$rtt, date.to.decimal)
rtdtree <- handle.error(tre, csv$rtt, 5)
len <- node.depth.edgelength(rtdtree)[1:Ntip(rtdtree)]
if (n==4){
dfB <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[4],length(len)))
}else if (n==5){
dfC <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[5],length(len)))
}else{
subtypes <- c(subtypes,filename)
big.df <- rbind(big.df, data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[n],length(len))))
}
}
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.8), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE")
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
par(mar=c(6,6,4,4))
plot(x=dfB$dates, y=dfB$lengths, col=alpha(as.character(dfB$color),0.5), xlim=c(1982,2016),ylim=c(0.1,0.3),cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtype B",cex.lab=1.3,cex.main=1.8)
abline(lm(dfB[,2]~dfB[,1]))
require(RColorBrewer)
cols <- brewer.pal(7, 'Dark2')
subtypes = c()
big.df <- data.frame()
#PHYLOGENETIC SCATTER PLOT -  Figure 1
for (n in 1:7){
csv <- read.csv(dfolder[n],header=F,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
tre <- read.tree(tfolder[n])
tre <- multi2di(tre)
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
csv$rtt <- apply(sapply(csv$date, get.range),2,mean)
csv$edit <- sapply(csv$rtt, date.to.decimal)
rtdtree <- handle.error(tre, csv$rtt, 5)
len <- node.depth.edgelength(rtdtree)[1:Ntip(rtdtree)]
if (n==4){
dfB <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[4],length(len)))
}else if (n==5){
dfC <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[5],length(len)))
}else{
subtypes <- c(subtypes,filename)
big.df <- rbind(big.df, data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[n],length(len))))
}
}
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.8), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE")
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
library(scales)
require(scales)
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.8), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE")
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.8), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.8), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]))
}
require(RColorBrewer)
cols <- brewer.pal(7, 'Set1')
subtypes = c()
big.df <- data.frame()
#PHYLOGENETIC SCATTER PLOT -  Figure 1
for (n in 1:7){
csv <- read.csv(dfolder[n],header=F,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
tre <- read.tree(tfolder[n])
tre <- multi2di(tre)
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
csv$rtt <- apply(sapply(csv$date, get.range),2,mean)
csv$edit <- sapply(csv$rtt, date.to.decimal)
rtdtree <- handle.error(tre, csv$rtt, 5)
len <- node.depth.edgelength(rtdtree)[1:Ntip(rtdtree)]
if (n==4){
dfB <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[4],length(len)))
}else if (n==5){
dfC <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[5],length(len)))
}else{
subtypes <- c(subtypes,filename)
big.df <- rbind(big.df, data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[n],length(len))))
}
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
nums <- c(1,2,3,4,5,7,8)
require(RColorBrewer)
cols <- brewer.pal(7, 'Set1')
subtypes = c()
big.df <- data.frame()
nums <- c(1,2,3,4,5,7,8)
#PHYLOGENETIC SCATTER PLOT -  Figure 1
for (n in 1:7){
csv <- read.csv(dfolder[n],header=F,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
tre <- read.tree(tfolder[n])
tre <- multi2di(tre)
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
csv$rtt <- apply(sapply(csv$date, get.range),2,mean)
csv$edit <- sapply(csv$rtt, date.to.decimal)
rtdtree <- handle.error(tre, csv$rtt, 5)
len <- node.depth.edgelength(rtdtree)[1:Ntip(rtdtree)]
if (n==4){
dfB <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[4],length(len)))
}else if (n==5){
dfC <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[5],length(len)))
}else{
subtypes <- c(subtypes,filename)
big.df <- rbind(big.df, data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[nums[n]],length(len))))
}
}
nums[6]
require(RColorBrewer)
cols <- brewer.pal(8, 'Set1')
subtypes = c()
big.df <- data.frame()
nums <- c(1,2,3,4,5,7,8)
#PHYLOGENETIC SCATTER PLOT -  Figure 1
for (n in 1:7){
csv <- read.csv(dfolder[n],header=F,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
tre <- read.tree(tfolder[n])
tre <- multi2di(tre)
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
csv$rtt <- apply(sapply(csv$date, get.range),2,mean)
csv$edit <- sapply(csv$rtt, date.to.decimal)
rtdtree <- handle.error(tre, csv$rtt, 5)
len <- node.depth.edgelength(rtdtree)[1:Ntip(rtdtree)]
if (n==4){
dfB <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[4],length(len)))
}else if (n==5){
dfC <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[5],length(len)))
}else{
subtypes <- c(subtypes,filename)
big.df <- rbind(big.df, data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[nums[n]],length(len))))
}
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]))
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]))
}
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]),cex=2)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]),cex=1.5)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]),cex=1.4)
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.2,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]),cex=1.4)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]),cex=1.4)
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,6,7)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.8)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
par(mar=c(6,6,4,4))
plot(x=dfB$dates, y=dfB$lengths, col=alpha(as.character(dfB$color),0.5), xlim=c(1982,2016),ylim=c(0.1,0.3),cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtype B",cex.lab=1.3,cex.main=1.8)
abline(lm(dfB[,2]~dfB[,1]))
par(mar=c(6,6,4,4))
plot(x=dfC$dates, y=dfC$lengths, col=alpha(cols[1],0.5), xlim=c(1988,2016),ylim=c(0.1,0.3),cex=1,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtype C",cex.lab=1.3,cex.main=1.6)
abline(lm(dfC[,2]~dfC[,1]))
par(mar=c(6,6,4,4))
plot(x=dfB$dates, y=dfB$lengths, col=alpha(as.character(dfB$color),0.5), xlim=c(1982,2016),ylim=c(0.1,0.3),cex=0.8,pch=20,
xlab="Collection Date",ylab="Root to Tip Branch Length", main="Subtype B",cex.lab=1.3,cex.main=1.6)
abline(lm(dfB[,2]~dfB[,1]))
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Subtypes A1, D, F1 and Recombinants AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Branch Lengths vs Collection Dates - A1, D, F1, AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Branch Lengths vs Collection Dates -- A1, D, F1, AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
par(mar=c(6,6,4,4))
plot(x=dfC$dates, y=dfC$lengths, col=alpha(cols[1],0.5), xlim=c(1988,2016),ylim=c(0.1,0.3),cex=1,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Branch Lengths vs. Collection Dates -- Subtype C",cex.lab=1.3,cex.main=1.6)
abline(lm(dfC[,2]~dfC[,1]))
for (n in 1:7){
csv <- read.csv(dfolder[n],header=F,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
tre <- read.tree(tfolder[n])
tre <- multi2di(tre)
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
csv$rtt <- apply(sapply(csv$date, get.range),2,mean)
csv$edit <- sapply(csv$rtt, date.to.decimal)
rtdtree <- handle.error(tre, csv$rtt, 5)
len <- node.depth.edgelength(rtdtree)[1:Ntip(rtdtree)]
if (n==4){
dfB <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[4],length(len)))
}else if (n==5){
dfC <- data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[5],length(len)))
}else{
subtypes <- c(subtypes,filename)
big.df <- rbind(big.df, data.frame(dates=csv$edit, lengths=len, subtype=rep(filename,length(len)), color=rep(cols[nums[n]],length(len))))
}
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Tree Branch Lengths vs. Collection Dates -- A1, D, F1, AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Phylogenetic Tree Properties -- A1, D, F1, AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Tree Branch Lengths vs. Collection Dates -- A1, D, F1, AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
par(mar=c(6,6,4,4))
plot(x=dfB$dates, y=dfB$lengths, col=alpha(as.character(dfB$color),0.5), xlim=c(1982,2016),ylim=c(0.1,0.3),cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Tree Branch Lengths vs. Collection Dates -- Subtype B",cex.lab=1.3,cex.main=1.6)
abline(lm(dfB[,2]~dfB[,1]))
par(mar=c(6,6,4,4))
plot(x=dfC$dates, y=dfC$lengths, col=alpha(cols[1],0.5), xlim=c(1988,2016),ylim=c(0.1,0.3),cex=1,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Tree Branch Lengths vs. Collection Dates -- Subtype C",cex.lab=1.3,cex.main=1.6)
abline(lm(dfC[,2]~dfC[,1]))
require(scales)
par(mar=c(6,6,4,4))
plot(x=big.df$dates, y=big.df$lengths, col=alpha(as.character(big.df$color),0.7), xlim=c(1982,2016),ylim=c(0.05,0.25), cex=0.8,pch=20,
xlab="Collection Date",ylab="Root-to-Tip Branch Length", main="Tree Branch Lengths vs. Collection Dates -- A1, D, F1, AG, AE", cex.lab=1.3,cex.main=1.6)
legend(1985,0.24,legend=c("01_AE","02_AG","A1","D","F1"), pch=rep(20,5),col=as.character(cols[c(1,2,3,7,8)]),cex=1.4)
for (n in subtypes){
abline(lm(big.df[which(big.df$subtype==n),2]~big.df[which(big.df$subtype==n),1]),col=as.character(big.df[which(big.df$subtype==n)[1],4]),lwd=1.5)
}
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL,direction="v",spacing=spacing_equal(sp = unit(0, "lines")),labeling_border(gp_labels=gpar(fontsize=12)),
sub="Variable Loops",residuals_type=NULL,legend=F)
require(vcd)
require(ape)
require(stringr)
require(ggplot2)
tfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/8_Dated_Trees", full.names=TRUE)
vfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/3RegionSequences/VRegions_mod2", full.names=TRUE)
len.diff <- list() #data.frame(subtype=character(),stringsAsFactors = F)
# This code reads phylogenetic trees and variable loop sequences in csv format.
branch.lengths <- data.frame()
for (i in 1:length(tfolder)){
tre <- read.tree(tfolder[i])
csv <- read.csv(vfolder[i], header=FALSE)
#for output
name <- strsplit(tfolder[i], "/")[[1]][7]
subtype <- strsplit(name, "\\.")[[1]][1]
filename <- paste0(subtype,"+.csv" )
#naming the csv
names(csv) <- c('accno', 'VR1', 'VR2','VR3', 'VR4', 'VR5')
#counting tips
n <- Ntip(tre)
# number of tips per internal node
# count the number of instances that first column (node) corresponds to a second column number which is <= n (meaning it is a tip)
numtips <- tabulate(tre$edge[,1][tre$edge[,2] <= n])
#determines which nodes contain cherries (returns vector with their integer positions)
is.cherry <- sapply(numtips, function(d) d==2)
# construct data frame where each row corresponds to a cherry
m <- sapply(which(is.cherry), function(a) { #will input the numbers of nodes containing 2 tips?
edge.idx <- tre$edge[,1]==a  # FINDS THE EDGES (row #) corresponding with the parent node ; ap: select rows in edge matrix with parent node index
c(a,   # index of the parent node
which(edge.idx),
t(     # transpose so we can concatenate this vector to i
tre$edge[edge.idx, 2]    # column of tip indices
)
)
})
df <- data.frame(node.index=m[1,], edge1=m[2,], edge2=m[3,], tip1=m[4,], tip2=m[5,])
df$tip1.label <- tre$tip.label[df$tip1]
df$tip2.label <- tre$tip.label[df$tip2]
df$tip1.len <- tre$edge.length[df$edge1]
df$tip2.len <- tre$edge.length[df$edge2]
indels <- df[,c(6:9)]
indels$total.length <- indels$tip1.len + indels$tip2.len
filtered.indels <- indels[indels$total.length != 0,]
temp2 <- data.frame(stringsAsFactors = F)
for (x in 1:nrow(filtered.indels)){
idxA <- match(filtered.indels$tip1.label[x], csv$accno)
idxB <- match(filtered.indels$tip2.label[x], csv$accno)
for (t in 2:ncol(csv)){
Avr <- as.character(csv[idxA,t])
Bvr <- as.character(csv[idxB,t])
Alength <- nchar(Avr)
Blength <- nchar(Bvr)
bln <- Alength == Blength
A.B <- paste0(Avr,Bvr)
name.bln <- paste0("VR",as.character(t-1),".indel")
name.nt <- paste0("VR",as.character(t-1),".nt")
diff <- abs(Alength - Blength)
filtered.indels[x,name.bln] <- bln
filtered.indels[x,name.nt] <- diff
if (!bln){
temp2 <- rbind(temp2, data.frame(accno1=as.character(csv[idxA,1]), seq1=Avr, accno2=as.character(csv[idxB,1]), seq2=Bvr, Vr=(t-1)))
}
}
}
setwd("~/PycharmProjects/hiv-evolution-master/10_Cherries/")
#temp2 = output for cherry sequences in csv format (accno1,seq1,accno2,seq2,vregion) FOLDER: 10_Cherries
write.csv(temp2,filename)
setwd("~/PycharmProjects/hiv-evolution-master/9_indels/")
#filtered indels = true/false outcomes along with the indel sizes  FOLDER: 9_indels
write.csv(filtered.indels, filename)
branch.lengths <- rbind(branch.lengths, data.frame(subtype=rep(subtype,nrow(filtered.indels)), length=filtered.indels$total.length))
for (j in 1:5){
len.diff[[paste0(filename,".VR",j,".three")]] <- filtered.indels[,paste0("VR",j,".nt")] <= 3
len.diff[[paste0(filename, ".VR",j,".!three")]] <-  filtered.indels[,paste0("VR",j,".nt")] > 3
}
}
#Used to load the indel.sizes data frame containing 3/6+ indel frequencies
indel.sizes <- data.frame(stringsAsFactors = FALSE)
for (z in 1:length(len.diff)){
subtype <- strsplit(names(len.diff)[[z]], "\\+.")[[1]][1]
vregion <- strsplit(strsplit(names(len.diff)[[z]], "\\.")[[1]][3],"VR")[[1]][2]
size <- strsplit(names(len.diff)[[z]], "\\.")[[1]][4]
indel.sizes[z,"subtype"] <- subtype #vregion
indel.sizes[z,"count"] <- sum(len.diff[[z]])
indel.sizes[z,"vregion"] <- vregion
if (size == "three"){
indel.sizes[z,"three"] <- "<= 3 nt"
}else{
indel.sizes[z,"three"] <- "> 3 nt"
}
}
# MOSAIC PLOTS - Figure 3
df3 <- data.frame(VRegions=rep(indel.sizes$vregion, indel.sizes$count), Indel_Sizes=rep(indel.sizes$three,indel.sizes$count))
df4 <- data.frame(Subtype=rep(indel.sizes$subtype, indel.sizes$count), Indel_Sizes=rep(indel.sizes$three,indel.sizes$count))
table2 <- table(rep(indel.sizes$subtype, indel.sizes$count), rep(indel.sizes$three, indel.sizes$count))
require(vcd)
par(ps = 50, cex.lab = 0.7, cex.axis = 0.5, cex.sub=0.5, las=0, xpd=T, mar=c(5,4, 2,2), mfrow=c(2,2))
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL,direction="v",spacing=spacing_equal(sp = unit(0, "lines")),labeling_border(gp_labels=gpar(fontsize=12)),
sub="Variable Loops",residuals_type=NULL,legend=F)
par(ps = 50, cex.lab = 0.7, cex.axis = 0.5, cex.sub=0.5, las=0, xpd=T, mar=c(5,4, 2,2), mfrow=c(2,2))
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL,direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
sub="Variable Loops",residuals_type=NULL,legend=F)
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL, xlab=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
sub="Variable Loops",residuals_type=NULL,legend=F)
mosaic(~Subtype + Indel_Sizes, data=df4, xlab = "Subtype", ylab = "Indel Sizes",
shade=T, main=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
sub="Variable Loops",residuals_type=NULL,legend=F)
mosaic(~Subtype + Indel_Sizes, data=df4, xlab = "Subtype", ylab = "Indel Sizes",
shade=T, main=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
sub="Variable Loops",residuals_type=NULL,legend=T)
mosaic(~Subtype + Indel_Sizes, data=df4, xlab = "Subtype", ylab = "Indel Sizes",
shade=T, main=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
residuals_type=NULL,legend=T)
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
sub="Variable Loops",residuals_type=NULL,legend=F)
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
residuals_type=NULL,legend=F)
sub="Variable Loops"
m <- mosaic(~VRegions + Indel_Sizes, data=df3,
shade=T, main=NULL, direction="v",spacing=spacing_equal(sp = unit(0, "lines")),
residuals_type=NULL,legend=T)
setwd("~/vindels/Indel_Analysis/")
require(bbmle)
require(MASS)
obj.f <- function(rate) -pll(rate, outcomes, times)  # objective function
pll <- function(rate, outcomes, times) {
# @param rate:  instantaneous rate of indels
# @param outcomes:  vector of boolean values, TRUE if *no* indel on cherry
# @param times:  vector of branch lengths associated with cherries
# @return: log-likelihood of model
pr <- exp(-rate * times)  # probabilities of no indels for each cherry
sum( outcomes * log(pr), (1-outcomes) * log(1-pr) )
}
csvfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/9_indels",full.names=TRUE)
max.llh <- data.frame(stringsAsFactors = FALSE)
typeof(max.llh)
con.int <- data.frame(stringsAsFactors = FALSE)
big.df <- data.frame(stringsAsFactors = FALSE)
for (i in 1:length(csvfolder)){
csv <- read.csv(csvfolder[i])
filename <- strsplit(strsplit(csvfolder[i], "/")[[1]][7], "\\.")[[1]][1]
times <- csv[,'total.length']
print(filename)
outcomes.df <- data.frame()
for (z in 1:5){
outcomes <- csv[[paste0("VR",z,".indel")]]
outcomes.df <- rbind(outcomes.df, data.frame(out=outcomes, vregion=z))
obj.f <- function(rate) -pll(rate, outcomes, times)  # objective function
mle.result <- bbmle::mle2(obj.f, start=list(rate=1), method = "Brent", lower=1e-12, upper = 1)
max.llh <- rbind(max.llh, data.frame(subtype=filename, vloop=z, rate=coef(mle.result)[[1]])) # this is the rate
#res$value #this is the likelihood
if(!all(outcomes)){
int <- confint(mle.result, level = 0.95)
con.int <- rbind(con.int,data.frame(subtype=filename,vloop=z,lower=int[[1]],upper=int[[2]]))
}else{
con.int <- rbind(con.int,data.frame(subtype=filename,vloop=z,lower=0,upper=0))
}
}
big.df <- rbind(big.df, data.frame(subtype=rep(filename, length(times)*5), Time=rep(times, 5), outcomes=outcomes.df$out, Vregion=as.factor(outcomes.df$vregion)))
}
max.llh
con.int
max.llh[6,3] <- 0
con.int[6,3] <- 0
con.int[6,4] <- 0
write.csv(max.llh, "indel_rates.csv")
write.csv(con.int, "conf_ints.csv")
