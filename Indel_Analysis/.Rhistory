}
setwd("~/PycharmProjects/hiv-evolution-master/10_Cherries/")
#temp2 = output for cherry sequences in csv format (accno1,seq1,accno2,seq2,vregion) FOLDER: 10_Cherries
write.csv(temp2,filename)
setwd("~/PycharmProjects/hiv-evolution-master/9_indels/")
#filtered indels = true/false outcomes along with the indel sizes  FOLDER: 9_indels
write.csv(filtered.indels, filename)
for (j in 1:5){
len.diff[[paste0(filename,".VR",j,".three")]] <- filtered.indels[,paste0("VR",j,".nt")] <= 3
len.diff[[paste0(filename, ".VR",j,".!three")]] <-  filtered.indels[,paste0("VR",j,".nt")] > 3
}
}
rtdtree
require(ape)
dfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/Dates",full.names=TRUE)
tfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/7Trees", full.names=TRUE)
setwd("~/PycharmProjects/hiv-evolution-master/8_Dated_Trees")
#----FUNCTIONS----
n.days <- function(year, month) {
# @param year: string (number) or integer for full year, e.g., '1997'
# @param month: string (number) or integer for month
start <- as.Date(paste(year, month, '01', sep='-'))
if (month == '12') {
# increment to start of next year
end <- as.Date(paste(as.integer(year)+1, '01', '01', sep='-'))
} else {
end <- as.Date(paste(year, as.integer(month)+1, '01', sep='-'))
}
return(as.integer(difftime(end, start)))
}
mid.date <- function(lo, hi){
mid <- as.Date(lo) + as.integer(as.Date(hi)-as.Date(lo))/2
return (mid)
}
date.to.decimal <- function(dt) {
return (as.double(dt) / 365.25 + 1970)
}
handle.error <- function(tre, vect, x){
rtdtree <- tryCatch(
{rtdtree <- rtt(tre, vect, ncpu=x)} ,
error = function(c){
message("Faulty rtt error, still running")
return (NULL)
}
)
return (rtdtree)
}
get.range <- function(x) {
x = as.character(x)
items <- strsplit(x, '-')[[1]]
year <- items[1]
if (length(items) == 1) {
## year only
low <- as.Date(paste(year, '01', '01', sep='-'))
high <- as.Date(paste(year, '12', '31', sep='-'))
}
else if (length(items) == 2) {
## year and month
month <- items[2]
# determine number of days in this month
days <- n.days(year, month)
low <- as.Date(paste(year, month, '01', sep='-'))
high <- as.Date(paste(year, month, days, sep='-'))
}
else {
# year, month, day
days <- items[3]
month <- items[2]
low <- as.Date(paste(year, month, days, sep='-'))
high <- low
}
return (c(low, high))
}
for (i in 1:length(tfolder)){
#tre <- read.tree(paste("~/PycharmProjects/hiv-evolution-master/7_1Trees",tfolder[1],sep="/"))
tre <- read.tree(tfolder[i])
csv <- read.csv(dfolder[i], header=FALSE,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[i], "/")[[1]][7], "_MSA2")[[1]][1]
print(filename)
tre <- multi2di(tre)
#rearranges the temp file to be in the same order as the tree
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
#loading a temporary data frame of mid dates
temp <- NULL
for (x in 1:nrow(csv)){
dtx <- get.range(csv$date[x])
#middate <- as.Date(mid.date(dtx[1],dtx[2]))
#decdate <- date.to.decimal(middate)
temp <- rbind(temp, data.frame(accno=csv$accno[x],
acc.date=csv$date[x], min.date=dtx[1], max.date=dtx[2],
min.ord=date.to.decimal(dtx[1]), max.ord=date.to.decimal(dtx[2])))
}
sample.times <- date.to.decimal(mid.date(temp$min.date, temp$max.date))
sample.times <- sample.times - 1970
rtdtree <- handle.error(tre, sample.times, 5)
if (is.null(rtdtree)){
next
}
write.tree(rtdtree, file="rtt2lsd.nwk")
#The following is written in accordance with the LSD format
write(nrow(temp), file='date_file.txt')
for (i in 1:nrow(temp)) {
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste("b(", temp$min.ord[i], ",", temp$max.ord[i], ")", sep='')),
file='date_file.txt', append=TRUE)
}
}
#paths <- nodepath(rtdtree)
#distances <- c()
#for (n in 1:length(paths))  distances <- c(distances, sum(rtdtree$edge.length[paths[[n]]]))
system(paste0('lsd -i rtt2lsd.nwk -d date_file.txt -o ', filename,' -c'))
}
file.remove('date_file.txt')
file.remove('rtt2lsd.nwk')
tre
filename
i=5
#tre <- read.tree(paste("~/PycharmProjects/hiv-evolution-master/7_1Trees",tfolder[1],sep="/"))
tre <- read.tree(tfolder[i])
csv <- read.csv(dfolder[i], header=FALSE,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[i], "/")[[1]][7], "_MSA2")[[1]][1]
print(filename)
tre <- multi2di(tre)
#rearranges the temp file to be in the same order as the tree
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
#loading a temporary data frame of mid dates
temp <- NULL
for (x in 1:nrow(csv)){
dtx <- get.range(csv$date[x])
#middate <- as.Date(mid.date(dtx[1],dtx[2]))
#decdate <- date.to.decimal(middate)
temp <- rbind(temp, data.frame(accno=csv$accno[x],
acc.date=csv$date[x], min.date=dtx[1], max.date=dtx[2],
min.ord=date.to.decimal(dtx[1]), max.ord=date.to.decimal(dtx[2])))
}
sample.times <- date.to.decimal(mid.date(temp$min.date, temp$max.date))
sample.times <- sample.times - 1970
rtdtree <- handle.error(tre, sample.times, 5)
if (is.null(rtdtree)){
next
}
write.tree(rtdtree, file="rtt2lsd.nwk")
#The following is written in accordance with the LSD format
write(nrow(temp), file='date_file.txt')
for (i in 1:nrow(temp)) {
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste("b(", temp$min.ord[i], ",", temp$max.ord[i], ")", sep='')),
file='date_file.txt', append=TRUE)
}
}
tre
plot(tre)
plot(rtdtree)
rtdtree
outcomes
csv
require(ape)
dfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/Dates",full.names=TRUE)
tfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/7Trees", full.names=TRUE)
setwd("~/PycharmProjects/hiv-evolution-master/8_Dated_Trees")
#----FUNCTIONS----
n.days <- function(year, month) {
# @param year: string (number) or integer for full year, e.g., '1997'
# @param month: string (number) or integer for month
start <- as.Date(paste(year, month, '01', sep='-'))
if (month == '12') {
# increment to start of next year
end <- as.Date(paste(as.integer(year)+1, '01', '01', sep='-'))
} else {
end <- as.Date(paste(year, as.integer(month)+1, '01', sep='-'))
}
return(as.integer(difftime(end, start)))
}
mid.date <- function(lo, hi){
mid <- as.Date(lo) + as.integer(as.Date(hi)-as.Date(lo))/2
return (mid)
}
date.to.decimal <- function(dt) {
return (as.double(dt) / 365.25 + 1970)
}
handle.error <- function(tre, vect, x){
rtdtree <- tryCatch(
{rtdtree <- rtt(tre, vect, ncpu=x)} ,
error = function(c){
message("Faulty rtt error, still running")
return (NULL)
}
)
return (rtdtree)
}
get.range <- function(x) {
x = as.character(x)
items <- strsplit(x, '-')[[1]]
year <- items[1]
if (length(items) == 1) {
## year only
low <- as.Date(paste(year, '01', '01', sep='-'))
high <- as.Date(paste(year, '12', '31', sep='-'))
}
else if (length(items) == 2) {
## year and month
month <- items[2]
# determine number of days in this month
days <- n.days(year, month)
low <- as.Date(paste(year, month, '01', sep='-'))
high <- as.Date(paste(year, month, days, sep='-'))
}
else {
# year, month, day
days <- items[3]
month <- items[2]
low <- as.Date(paste(year, month, days, sep='-'))
high <- low
}
return (c(low, high))
}
for (n in 1:length(tfolder)){
#tre <- read.tree(paste("~/PycharmProjects/hiv-evolution-master/7_1Trees",tfolder[1],sep="/"))
tre <- read.tree(tfolder[n])
csv <- read.csv(dfolder[n], header=FALSE,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
print(filename)
tre <- multi2di(tre)
#rearranges the temp file to be in the same order as the tree
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
#loading a temporary data frame of mid dates
temp <- NULL
for (x in 1:nrow(csv)){
dtx <- get.range(csv$date[x])
#middate <- as.Date(mid.date(dtx[1],dtx[2]))
#decdate <- date.to.decimal(middate)
temp <- rbind(temp, data.frame(accno=csv$accno[x],
acc.date=csv$date[x], min.date=dtx[1], max.date=dtx[2],
min.ord=date.to.decimal(dtx[1]), max.ord=date.to.decimal(dtx[2])))
}
sample.times <- date.to.decimal(mid.date(temp$min.date, temp$max.date))
sample.times <- sample.times - 1970
rtdtree <- handle.error(tre, sample.times, 5)
if (is.null(rtdtree)){
next
}
write.tree(rtdtree, file="rtt2lsd.nwk")
#The following is written in accordance with the LSD format
write(nrow(temp), file='date_file.txt')
for (i in 1:nrow(temp)) {
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste("b(", temp$min.ord[i], ",", temp$max.ord[i], ")", sep='')),
file='date_file.txt', append=TRUE)
}
}
#paths <- nodepath(rtdtree)
#distances <- c()
#for (n in 1:length(paths))  distances <- c(distances, sum(rtdtree$edge.length[paths[[n]]]))
system(paste0('lsd -i rtt2lsd.nwk -d date_file.txt -o ', filename,' -c'))
}
i = 3
print("first")
print(i)
print("first")
for (i in 1:nrow(temp)) {
print(i)
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste("b(", temp$min.ord[i], ",", temp$max.ord[i], ")", sep='')),
file='date_file.txt', append=TRUE)
}
}
i = 3
print("first")
print(i)
print("first")
for (i in 1:nrow(temp)) {
print(i)
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste("b(", temp$min.ord[i], ",", temp$max.ord[i], ")", sep='')),
file='date_file.txt', append=TRUE)
}
}
print(i)
require(ape)
dfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/Dates",full.names=TRUE)
tfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/7Trees", full.names=TRUE)
setwd("~/PycharmProjects/hiv-evolution-master/8_Dated_Trees")
#----FUNCTIONS----
n.days <- function(year, month) {
# @param year: string (number) or integer for full year, e.g., '1997'
# @param month: string (number) or integer for month
start <- as.Date(paste(year, month, '01', sep='-'))
if (month == '12') {
# increment to start of next year
end <- as.Date(paste(as.integer(year)+1, '01', '01', sep='-'))
} else {
end <- as.Date(paste(year, as.integer(month)+1, '01', sep='-'))
}
return(as.integer(difftime(end, start)))
}
mid.date <- function(lo, hi){
mid <- as.Date(lo) + as.integer(as.Date(hi)-as.Date(lo))/2
return (mid)
}
date.to.decimal <- function(dt) {
return (as.double(dt) / 365.25 + 1970)
}
handle.error <- function(tre, vect, x){
rtdtree <- tryCatch(
{rtdtree <- rtt(tre, vect, ncpu=x)} ,
error = function(c){
message("Faulty rtt error, still running")
return (NULL)
}
)
return (rtdtree)
}
get.range <- function(x) {
x = as.character(x)
items <- strsplit(x, '-')[[1]]
year <- items[1]
if (length(items) == 1) {
## year only
low <- as.Date(paste(year, '01', '01', sep='-'))
high <- as.Date(paste(year, '12', '31', sep='-'))
}
else if (length(items) == 2) {
## year and month
month <- items[2]
# determine number of days in this month
days <- n.days(year, month)
low <- as.Date(paste(year, month, '01', sep='-'))
high <- as.Date(paste(year, month, days, sep='-'))
}
else {
# year, month, day
days <- items[3]
month <- items[2]
low <- as.Date(paste(year, month, days, sep='-'))
high <- low
}
return (c(low, high))
}
for (n in 1:length(tfolder)){
#tre <- read.tree(paste("~/PycharmProjects/hiv-evolution-master/7_1Trees",tfolder[1],sep="/"))
tre <- read.tree(tfolder[n])
csv <- read.csv(dfolder[n], header=FALSE,stringsAsFactors = F)
names(csv) <- c('accno', 'date')
filename <- strsplit(strsplit(tfolder[n], "/")[[1]][7], "_MSA2")[[1]][1]
print(filename)
tre <- multi2di(tre)
#rearranges the temp file to be in the same order as the tree
index <- match(tre$tip.label, csv$accno)
csv <- csv[index,]
#loading a temporary data frame of mid dates
temp <- NULL
for (x in 1:nrow(csv)){
dtx <- get.range(csv$date[x])
#middate <- as.Date(mid.date(dtx[1],dtx[2]))
#decdate <- date.to.decimal(middate)
temp <- rbind(temp, data.frame(accno=csv$accno[x],
acc.date=csv$date[x], min.date=dtx[1], max.date=dtx[2],
min.ord=date.to.decimal(dtx[1]), max.ord=date.to.decimal(dtx[2])))
}
sample.times <- date.to.decimal(mid.date(temp$min.date, temp$max.date))
sample.times <- sample.times - 1970
rtdtree <- handle.error(tre, sample.times, 5)
if (is.null(rtdtree)){
next
}
write.tree(rtdtree, file="rtt2lsd.nwk")
#The following is written in accordance with the LSD format
write(nrow(temp), file='date_file.txt')
for (i in 1:nrow(temp)) {
if (temp$min.ord[i] == temp$max.ord[i]) {
write(paste(temp$accno[i], temp$min.ord[i]), file='date_file.txt', append=TRUE)
} else {
write(paste(temp$accno[i], paste("b(", temp$min.ord[i], ",", temp$max.ord[i], ")", sep='')),
file='date_file.txt', append=TRUE)
}
}
print(i)
#paths <- nodepath(rtdtree)
#distances <- c()
#for (n in 1:length(paths))  distances <- c(distances, sum(rtdtree$edge.length[paths[[n]]]))
system(paste0('lsd -i rtt2lsd.nwk -d date_file.txt -o ', filename,' -c'))
}
file.remove('date_file.txt')
file.remove('rtt2lsd.nwk')
require(ape)
require(stringr)
require(ggplot2)
tfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/8_Dated_Trees", full.names=TRUE)
vfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/3RegionSequences/VRegions_mod2", full.names=TRUE)
len.diff <- list() #data.frame(subtype=character(),stringsAsFactors = F)
# This code reads phylogenetic trees and variable loop sequences in csv format.
i=6
tre <- read.tree(tfolder[i])
csv <- read.csv(vfolder[i], header=FALSE)
#for output
name <- strsplit(tfolder[i], "/")[[1]][7]
subtype <- strsplit(name, "\\.")[[1]][1]
filename <- paste0(subtype,"+.csv" )
#naming the csv
names(csv) <- c('accno', 'VR1', 'VR2','VR3', 'VR4', 'VR5')
#counting tips
n <- Ntip(tre)
# number of tips per internal node
# count the number of instances that first column (node) corresponds to a second column number which is <= n (meaning it is a tip)
numtips <- tabulate(tre$edge[,1][tre$edge[,2] <= n])
#determines which nodes contain cherries (returns vector with their integer positions)
is.cherry <- sapply(numtips, function(d) d==2)
# construct data frame where each row corresponds to a cherry
m <- sapply(which(is.cherry), function(a) { #will input the numbers of nodes containing 2 tips?
edge.idx <- tre$edge[,1]==a  # FINDS THE EDGES (row #) corresponding with the parent node ; ap: select rows in edge matrix with parent node index
c(a,   # index of the parent node
which(edge.idx),
t(     # transpose so we can concatenate this vector to i
tre$edge[edge.idx, 2]    # column of tip indices
)
)
})
df <- data.frame(node.index=m[1,], edge1=m[2,], edge2=m[3,], tip1=m[4,], tip2=m[5,])
df$tip1.label <- tre$tip.label[df$tip1]
df$tip2.label <- tre$tip.label[df$tip2]
df$tip1.len <- tre$edge.length[df$edge1]
df$tip2.len <- tre$edge.length[df$edge2]
indels <- df[,c(6:9)]
indels$total.length <- indels$tip1.len + indels$tip2.len
filtered.indels <- indels[indels$total.length != 0,]
temp2 <- data.frame(stringsAsFactors = F)
for (x in 1:nrow(filtered.indels)){
idxA <- match(filtered.indels$tip1.label[x], csv$accno)
idxB <- match(filtered.indels$tip2.label[x], csv$accno)
for (t in 2:ncol(csv)){
Avr <- as.character(csv[idxA,t])
Bvr <- as.character(csv[idxB,t])
Alength <- nchar(Avr)
Blength <- nchar(Bvr)
bln <- Alength == Blength
A.B <- paste0(Avr,Bvr)
name.bln <- paste0("VR",as.character(t-1),".indel")
name.nt <- paste0("VR",as.character(t-1),".nt")
diff <- abs(Alength - Blength)
filtered.indels[x,name.bln] <- bln
filtered.indels[x,name.nt] <- diff
if (t == 2){
print(Avr)
print(Bvr)
print(bln)
}
if (!bln){
temp2 <- rbind(temp2, data.frame(accno1=as.character(csv[idxA,1]), seq1=Avr, accno2=as.character(csv[idxB,1]), seq2=Bvr, Vr=(t-1)))
}
}
}
filtered.indels
setwd("~/vindels/Indel_Analysis/")
require(bbmle)
require(MASS)
obj.f <- function(rate) -pll(rate, outcomes, times)  # objective function
pll <- function(rate, outcomes, times) {
# @param rate:  instantaneous rate of indels
# @param outcomes:  vector of boolean values, TRUE if *no* indel on cherry
# @param times:  vector of branch lengths associated with cherries
# @return: log-likelihood of model
pr <- exp(-rate * times)  # probabilities of no indels for each cherry
sum( outcomes * log(pr), (1-outcomes) * log(1-pr) )
}
csvfolder <- list.files(path="~/PycharmProjects/hiv-evolution-master/9_2_indels",full.names=TRUE)
max.llh <- data.frame("subtype"=character(), stringsAsFactors = FALSE)
con.int <- data.frame("subtype"=character(), stringsAsFactors = FALSE)
big.df <- data.frame(stringsAsFactors = FALSE)
names(max.llh) <- 'subtypes'
for (i in 1:length(csvfolder)){
csv <- read.csv(csvfolder[i])
filename <- strsplit(strsplit(csvfolder[i], "/")[[1]][7], "\\.")[[1]][1]
max.llh[i,1] <- filename
con.int[i,1] <- filename
times <- csv[,'total.length']
print(filename)
outcomes.df <- data.frame()
for (z in 1:5){
outcomes <- csv[[paste0("VR",z,".indel")]]
outcomes.df <- rbind(outcomes.df, data.frame(out=outcomes, vregion=z))
obj.f <- function(rate) -pll(rate, outcomes, times)  # objective function
mle.result <- bbmle::mle2(obj.f, start=list(rate=1), method = "Brent", lower=1e-12, upper = 1)
max.llh[i,paste0("VR",z,".rate")] <- coef(mle.result)[[1]] # this is the rate
#res$value #this is the likelihood
if(!all(outcomes)){
int <- confint(mle.result, level = 0.95)
con.int[i, paste0("VR",z,".lower")] <- int[[1]]
con.int[i, paste0("VR",z,".upper")] <- int[[2]]
}else{
con.int[i, paste0("VR",z,".lower")] <- 0
con.int[i, paste0("VR",z,".upper")] <- 0
}
}
big.df <- rbind(big.df, data.frame(subtype=rep(filename, length(times)*5), Time=rep(times, 5), outcomes=outcomes.df$out, Vregion=as.factor(outcomes.df$vregion)))
}
max.llh
